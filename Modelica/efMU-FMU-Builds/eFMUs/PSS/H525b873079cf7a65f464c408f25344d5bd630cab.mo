within ;
model H525b873079cf7a65f464c408f25344d5bd630cab
  "Stub for eFMU-based co-simulation of
       [efmiPSSusecase.Components.PSSTypeIImod4efmi]
     using the static linked libraries suited for Dymola's current simulation
     platform generated for the Production Code containers
       [PCode_SPE_cb4a8a449b4ada864625ee5a4355578a3aaf08ed]
       [PCode_SPE_fba3e0dfa6c8985b41bcbe3594ee941ce98b740c]
     as configured by eFMU generation configuration
       [efmiPSSusecase.eBlockDymolaEmbedded]
     Generated by Dymola on 2025-10-27T17:06:19Z."
extends fmuIcon;

// Model automatically generated by Dymola from FMI model description
public
encapsulated package importedFMUTypes
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_Kw' = Real;
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_T1' = Real (unit = "s", quantity = "Time");
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_T2' = Real (unit = "s", quantity = "Time");
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_T3' = Real (unit = "s", quantity = "Time");
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_T4' = Real (unit = "s", quantity = "Time");
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_Tw' = Real (unit = "s", quantity = "Time");
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_vSI_start' = Real;
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_vsmax' = Real;
  type 'efmuPSS_eFMU_SiL_Support\'___TuningConnectors_vsmin' = Real;
  type Modelica_Blocks_Interfaces_BooleanInput = Boolean;
  type Modelica_Blocks_Interfaces_BooleanOutput = Boolean;
  type Modelica_Blocks_Interfaces_IntegerOutput = Integer;
  type Modelica_Blocks_Interfaces_RealInput = Real;
  type Modelica_Blocks_Interfaces_RealOutput = Real;
  type OpenIPSL_Types_PerUnit = Real;
  type OpenIPSL_Types_Time = Real (unit = "s", quantity = "Time");
  type 'efmuPSS_eFMU_SiL_Support\'_ProductionCodes' = enumeration(Mockup "non-functional mockup",
        PCode_SPE_cb4a8a449b4ada864625ee5a4355578a3aaf08ed,
        PCode_SPE_fba3e0dfa6c8985b41bcbe3594ee941ce98b740c);
end importedFMUTypes;
  parameter Real Kw = 9.5 "Stabilizer gain [pu/pu]";
  parameter importedFMUTypes.OpenIPSL_Types_Time T1 = 0.154 "First stabilizer time constant";
  parameter importedFMUTypes.OpenIPSL_Types_Time T2 = 0.033 "Second stabilizer time constant";
  parameter importedFMUTypes.OpenIPSL_Types_Time T3 = 1 "Third stabilizer time constant";
  parameter importedFMUTypes.OpenIPSL_Types_Time T4 = 1 "Fourth stabilizer time constant";
  parameter importedFMUTypes.OpenIPSL_Types_Time Tw = 1.41 "Wash-out time constant";
  parameter Real vSI_start = 1.0 "Default start value for vSI, the PSS input signal.";
  parameter importedFMUTypes.OpenIPSL_Types_PerUnit vsmax = 0.2 "Max stabilizer output signal";
  parameter importedFMUTypes.OpenIPSL_Types_PerUnit vsmin = -0.2 "Min stabilizer output signal";
  protected
  record _Clocks_rec
    protected
    record BaseClock_0_rec
      protected
      record SubClock_1_rec
        protected
        record __active_tuning_rec
        end __active_tuning_rec;
        public
        __active_tuning_rec __active_tuning;
        protected
        record '__cosimulation_results[1]_rec'
        end '__cosimulation_results[1]_rec';
        public
        '__cosimulation_results[1]_rec' '__cosimulation_results[1]';
        protected
        record '__cosimulation_results[2]_rec'
        end '__cosimulation_results[2]_rec';
        public
        '__cosimulation_results[2]_rec' '__cosimulation_results[2]';
        protected
        record '__cosimulation_results[3]_rec'
        end '__cosimulation_results[3]_rec';
        public
        '__cosimulation_results[3]_rec' '__cosimulation_results[3]';
        protected
        record __sampled_rec
          protected
          record __tuning_rec
          end __tuning_rec;
          public
          __tuning_rec __tuning;
        end __sampled_rec;
        public
        __sampled_rec __sampled;
        protected
        record __tuning_decoder_rec
        end __tuning_decoder_rec;
        public
        __tuning_decoder_rec __tuning_decoder;
      end SubClock_1_rec;
      public
      SubClock_1_rec SubClock_1;
    end BaseClock_0_rec;
    public
    BaseClock_0_rec BaseClock_0;
  end _Clocks_rec;
  public
  _Clocks_rec _Clocks;
  parameter Real _vSI_start = 0.0
  annotation (Dialog( group="Start values for inputs "));
protected
  Real _vSI_old(start = _vSI_start);
public
  Modelica.Blocks.Interfaces.RealInput vSI(start = _vSI_start) "PSS input signal "
  annotation (Placement(transformation(extent={{-124,-20},{-84,20}})));
  Modelica.Blocks.Interfaces.BooleanOutput __recalibrated "Signals whether the eFMU has been recalibrated before calling 'DoStep()'
     or not."
  annotation (Placement(transformation(extent={{100,47},{140,87}})));
  Modelica.Blocks.Interfaces.IntegerOutput __error_signals_Recalibrate "Error signals returned throughout the execution of the 'Recalibrate()'
     function of the defining production code."
  annotation (Placement(transformation(extent={{100,14},{140,54}})));
  Modelica.Blocks.Interfaces.IntegerOutput __error_signals_Reinitialize "Error signals returned throughout the execution of the 'Reinitialize()'
     function of the defining production code."
  annotation (Placement(transformation(extent={{100,-20},{140,20}})));
  Modelica.Blocks.Interfaces.IntegerOutput __error_signals_DoStep "Error signals returned throughout the execution of the 'DoStep()'
     function of the defining production code."
  annotation (Placement(transformation(extent={{100,-53},{140,-13}})));
  Modelica.Blocks.Interfaces.RealOutput vs "PSS output signal"
  annotation (Placement(transformation(extent={{100,-86},{140,-46}})));
public
  parameter String fmi_instanceName="H525b873079cf7a65f464c408f25344d5bd630cab"
  annotation (Dialog(tab="FMI", group="Instance name"));
  parameter Boolean fmi_loggingOn=false
  annotation (Dialog(tab="FMI", group="Enable logging"));
  parameter Boolean fmi_InputTime=false
  "Time point of input used when calling doStep."
  annotation (Evaluate=true,Dialog(tab="FMI", group="Input Handling"),choices(choice= false "StepEnd", choice= true "StepStart"));
  parameter Boolean fmi_UsePreOnInputSignals=true
  annotation (Evaluate=true,Dialog(tab="FMI", group="Input Handling"));
  parameter Real fmi_StartTime = 0.0
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Real fmi_StopTime = 10.0
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Real fmi_CommunicationStepSize = 0.001
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Real fmi_NumberOfSteps = (fmi_StopTime-fmi_StartTime)/fmi_CommunicationStepSize
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Integer stepSizeScaleFactor = 1 "Number of doSteps called between two CommunicationStepSize"
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Boolean fmi_forceShutDownAtStopTime=false
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Boolean fmi_setTol=false "Set the tolerance fmi_rTol in fmi2SetupExperiment, if false fmu defautl tolerence will be used."
  annotation (Dialog(tab="FMI", group="Step time"));
  parameter Real fmi_rTol=1E-06 "Relative tolerance for the internal solver of the fmu"
  annotation (Dialog(tab="FMI", group="Step time",enable = fmi_setTol));
  parameter String fmi_resourceLocation="file:///"+ModelicaServices.ExternalReferences.loadResource("modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/resources")
  annotation (Dialog(tab="FMI", group="Instantiation"));
protected
  fmi_Functions.fmiModel fmi;
  Boolean fmi_exitInit(start=false,fixed=true);
  Boolean fmi_flip(start=false,fixed=true);
  parameter Real fmi_rdum(start=0,fixed=false);
  parameter Integer fmi_idum(start=0,fixed=false);
  Boolean fmi_StepOK;
  parameter Real zeroOffset = 0;
  parameter Real myTimeStart(fixed=false);
  record 'Internal '
    Boolean __recalibrated;
    Integer __error_signals_Recalibrate;
    Integer __error_signals_Reinitialize;
    Integer __error_signals_DoStep;
    Real vs;
  end 'Internal ';
  'Internal ' internal;
  parameter String fmi_xNames[0] =fill("",0);
  parameter Integer fmi_xVrs[0] =fill(0,0);
  parameter String fmi_dxNames[0] =fill("",0);
  parameter Integer fmi_dxVrs[0] =fill(0,0);
  parameter String fmi_uNames[1] ={"vSI"};
  parameter Integer fmi_uVrs[1] ={620756992};
  parameter String fmi_yNames[1] ={"vs"};
  parameter Integer fmi_yVrs[1] ={603979780};
package fmi_Functions

    class fmiModel
      extends ExternalObject;
      function constructor "Initialize FMI model"
        extends Modelica.Icons.Function;
        input String instanceName;
        input Boolean loggingOn;
        input String resourceLocation;
        output fmiModel fmi;
        external"C" fmi = H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiInstantiateModel2(instanceName, loggingOn, resourceLocation)
        annotation(Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_Instantiate_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_Instantiate_C 1
#include \"FMI/fmi2Import.h\"
#include <stdlib.h>
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191Logger(fmi2ComponentEnvironment componentEnvironment, fmi2String instanceName, fmi2Status status,
  fmi2String category, fmi2String message, ...) {
  char msg[4096];
  char buf[4096];
  va_list ap;
  int len;
  va_start(ap,message);
#if defined(_MSC_VER) && _MSC_VER>=1200
  len = _snprintf(msg, sizeof(msg)/sizeof(*msg), \"%s: %s\", instanceName, message);
  if (len < 0) goto fail;
  len = _vsnprintf(buf, sizeof(buf)/sizeof(*buf) - 2, msg, ap);
  if (len < 0) goto fail;
#else
  len = snprintf(msg, sizeof(msg)/sizeof(*msg), \"%s: %s\", instanceName, message);
  if (len < 0) goto fail;
  len = vsnprintf(buf, sizeof(buf)/sizeof(*buf) - 2, msg, ap);
  if (len < 0) goto fail;
#endif
  if( len>0 && len < 4096 && buf[len - 1]!='\\n'){
    buf[len] = '\\n';
    buf[len + 1] = 0;
  }
  va_end(ap);
  switch (status) {
    case fmi2Fatal:
      ModelicaMessage(\"[fmi2Fatal]: \");
      break;
    case fmi2Error:
      ModelicaMessage(\"[fmi2Error]: \");
      break;
    case fmi2Discard:
      ModelicaMessage(\"[fmi2Discard]: \");
      break;
    case fmi2Warning:
      ModelicaMessage(\"[fmi2Warning]: \");
      break;
    case fmi2OK:
      ModelicaMessage(\"[fmi2OK]: \");
      break;
  }
  ModelicaMessage(buf);
  return;
fail:
  ModelicaMessage(\"Logger failed, message too long?\");
}
void * H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiInstantiateModel2(const char*instanceName, fmi2Boolean loggingOn, fmi2String resourceLocation) {
  static fmi2CallbackFunctions funcs = {&H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191Logger, &calloc, &free, NULL, NULL};
  struct dy_fmi2Extended* res;
  res = calloc(1, sizeof(struct dy_fmi2Extended));
  if (res!=0) {
#ifdef _WIN32
    if (!(res->hInst=LoadLibraryW(L\"H525b873079cf7a65f464c408f25344d5bd630cab.dll\"))) {
      ModelicaError(\"Loading of FMU dynamic link library (H525b873079cf7a65f464c408f25344d5bd630cab.dll) failed!\");
#else
    if (!(res->hInst=LoadLibrary(\"H525b873079cf7a65f464c408f25344d5bd630cab.so\"))) {
      ModelicaError(\"Loading of FMU dynamic link library (H525b873079cf7a65f464c408f25344d5bd630cab.so) failed!\");
#endif
      return 0;
    }
    if (!(res->dyFmiInstantiate=(fmi2InstantiateFunc)GetProcAddress(res->hInst,\"fmi2Instantiate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2Instantiate!\");
      return 0;
    }
    if (!(res->dyFmiFreeInstance=(fmi2FreeInstanceFunc)GetProcAddress(res->hInst,\"fmi2FreeInstance\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2FreeInstance!\");
      return 0;
    }
    if (!(res->dyFmiSetupExperiment=(fmi2SetupExperimentFunc)GetProcAddress(res->hInst,\"fmi2SetupExperiment\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetupExperiment!\");
      return 0;
    }
    if (!(res->dyFmiEnterInitializationMode=(fmi2EnterInitializationModeFunc)GetProcAddress(res->hInst,\"fmi2EnterInitializationMode\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2EnterInitializationMode!\");
      return 0;
    }
    if (!(res->dyFmiExitInitializationMode=(fmi2ExitInitializationModeFunc)GetProcAddress(res->hInst,\"fmi2ExitInitializationMode\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2ExitInitializationMode!\");
      return 0;
    }
    if (!(res->dyFmiTerminate=(fmi2TerminateFunc)GetProcAddress(res->hInst,\"fmi2Terminate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2Terminate!\");
      return 0;
    }
    if (!(res->dyFmiReset=(fmi2ResetFunc)GetProcAddress(res->hInst,\"fmi2Reset\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2Reset!\");
      return 0;
    }
    if (!(res->dyFmiSetReal=(fmi2SetRealFunc)GetProcAddress(res->hInst,\"fmi2SetReal\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetReal!\");
      return 0;
    }
    if (!(res->dyFmiGetReal=(fmi2GetRealFunc)GetProcAddress(res->hInst,\"fmi2GetReal\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetReal!\");
      return 0;
    }
    if (!(res->dyFmiSetInteger=(fmi2SetIntegerFunc)GetProcAddress(res->hInst,\"fmi2SetInteger\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetInteger!\");
      return 0;
    }
    if (!(res->dyFmiGetInteger=(fmi2GetIntegerFunc)GetProcAddress(res->hInst,\"fmi2GetInteger\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetInteger!\");
      return 0;
    }
    if (!(res->dyFmiSetBoolean=(fmi2SetBooleanFunc)GetProcAddress(res->hInst,\"fmi2SetBoolean\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetBoolean!\");
      return 0;
    }
    if (!(res->dyFmiGetBoolean=(fmi2GetBooleanFunc)GetProcAddress(res->hInst,\"fmi2GetBoolean\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetBoolean!\");
      return 0;
    }
    if (!(res->dyFmiSetDebugLogging=(fmi2SetDebugLoggingFunc)GetProcAddress(res->hInst,\"fmi2SetDebugLogging\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetDebugLogging!\");
      return 0;
    }
    if (!(res->dyFmiSetString=(fmi2SetStringFunc)GetProcAddress(res->hInst,\"fmi2SetString\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetString!\");
      return 0;
    }
    if (!(res->dyFmiGetString=(fmi2GetStringFunc)GetProcAddress(res->hInst,\"fmi2GetString\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetString!\");
      return 0;
    }
    if (!(res->dyFmiDoStep=(fmi2DoStepFunc)GetProcAddress(res->hInst,\"fmi2DoStep\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2DoStep!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiDoStep\");
      return 0;
    }
    if (!(res->dyFmiGetBooleanStatus=(fmi2GetBooleanStatusFunc)GetProcAddress(res->hInst,\"fmi2GetBooleanStatus\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetBooleanStatus!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiGetBooleanStatus\");
      return 0;
    }
    if (!(res->dyFmiGetRealStatus=(fmi2GetRealStatusFunc)GetProcAddress(res->hInst,\"fmi2GetRealStatus\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetRealStatus!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiGetRealStatus\");
      return 0;
    }
    if (!(res->dyFmiGetDirectionalDerivative=(fmi2GetDirectionalDerivativeFunc)GetProcAddress(res->hInst,\"fmi2GetDirectionalDerivative\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetDirectionalDerivative!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiGetDirectionalDerivative\");
      return 0;
    }
    if (!(res->dyFmiGetFMUstate=(fmi2GetFMUstateFunc)GetProcAddress(res->hInst,\"fmi2GetFMUstate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2GetFMUstate!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiGetFMUstate\");
      return 0;
    }
    if (!(res->dyFmiSetFMUstate=(fmi2SetFMUstateFunc)GetProcAddress(res->hInst,\"fmi2SetFMUstate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SetFMUstate!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiSetFMUstate\");
      return 0;
    }
    if (!(res->dyFmiFreeFMUstate=(fmi2FreeFMUstateFunc)GetProcAddress(res->hInst,\"fmi2FreeFMUstate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2FreeFMUstate!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiFreeFMUstate\");
      return 0;
    }
    if (!(res->dyFmiSerializedFMUstateSize=(fmi2SerializedFMUstateSizeFunc)GetProcAddress(res->hInst,\"fmi2SerializedFMUstateSize\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SerializedFMUstateSize!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiSerializedFMUstateSize\");
      return 0;
    }
    if (!(res->dyFmiSerializeFMUstate=(fmi2SerializeFMUstateFunc)GetProcAddress(res->hInst,\"fmi2SerializeFMUstate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2SerializeFMUstate!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiSerializeFMUstate\");
      return 0;
    }
    if (!(res->dyFmiDeSerializeFMUstate=(fmi2DeSerializeFMUstateFunc)GetProcAddress(res->hInst,\"fmi2DeSerializeFMUstate\"))) {
      ModelicaError(\"GetProcAddress failed for fmi2DeSerializeFMUstate!\\n The model was imported as a Co - Simulation FMU but could not load the CS specific function fmiDeSerializeFMUstate\");
      return 0;
    }
    res->m=res->dyFmiInstantiate(instanceName, fmi2CoSimulation, \"{324b08bb-228e-45f3-8aa6-c54846f41c91}\",resourceLocation, &funcs, fmi2False, loggingOn);
    res->der = calloc(0,sizeof(double));
    res->out = calloc(1,sizeof(double));
    if (!res->m || !res->der && 0 || !res->out && 1 ) {free(res);res=0;ModelicaError(\"InstantiateModel failed\");}
    else {
      /*static const char* funcCalls = \"FunctionCalls\";*/
      /*res->dyFmiSetDebugLogging(res->m,fmi2True,1,&funcCalls);*/
      res->dyTriggered=0;
      res->dyTime=res->dyLastTime=-1e37;
      res->discreteInputChanged=1;
      res->currentMode=dyfmi2InstantiationMode;
      res->dyLastStepTime=0;
      res->dyFMUstate=NULL;
    }
  }
  return res;
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
        annotation (__Dymola_doNotLinkSharedObject=true,
            __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab");
      end constructor;

      function destructor "Release storage of FMI model"
          extends Modelica.Icons.Function;
          input fmiModel fmi;
          external"C"
                     H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiFreeModelInstance2(fmi)
          annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_Free_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_Free_C 1
#include \"FMI/fmi2Import.h\"
#include <stdlib.h>
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiFreeModelInstance2(void*m) {
  struct dy_fmi2Extended*a=m;
  if (a) {
    if(a->dyFMUstate)
    a->dyFmiFreeFMUstate(a->m, &a->dyFMUstate);
    /*a->dyFmiSetDebugLogging(a->m,fmi2True,0,NULL);*/
    a->dyFmiTerminate(a->m);
    a->dyFmiFreeInstance(a->m);
    FreeLibrary(a->hInst);
    free(a->der);a->der=0;
    free(a->out);a->out=0;
    free(a);
  }
}
#endif",       Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
        annotation(__Dymola_doNotLinkSharedObject=true,__Dymola_CriticalRegion = "H525b873079cf7a65f464c408f25344d5bd630cab");
      end destructor;

    end fmiModel;

    function  fmiDoStep
    input fmiModel fmi;
    input Real currentTime;
    input Real stepSize;
    input Real preAvailable;
    output Boolean stepOK;
    output Real postAvailable=preAvailable;
    external"C" stepOK =H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiDoStep2(fmi, currentTime, stepSize)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_DoStep_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_DoStep_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
double H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiDoStep2(void*m, double currentTime, double stepSize) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  fmi2Boolean value=fmi2False;
  if (a) {
    status=a->dyFmiDoStep(a->m, currentTime, stepSize, fmi2True);
    if(status==fmi2Discard){
      status = a->dyFmiGetBooleanStatus(a->m, fmi2Terminated, &value);
      if(value==fmi2True){
        double tt = 0;
        char s[64] = {0};
        fmi2Status stat2 = fmi2Error;
        stat2 = a->dyFmiGetRealStatus(a->m, fmi2LastSuccessfulTime, &tt);
#if defined(_MSC_VER) && _MSC_VER >= 1200
        if(stat2 == fmi2OK && _snprintf(s, sizeof(s)/sizeof(*s), \"Terminate signaled by the FMU at time %g\", tt) > 0){
#else
        if(stat2 == fmi2OK && snprintf(s, sizeof(s)/sizeof(*s), \"Terminate signaled by the FMU at time %g\", tt) > 0){
#endif
			terminate(s);
        }else{
          terminate(\"Terminate signaled by the FMU\");
        }
      }
    }
  }
  if (status!=fmi2OK && status!=fmi2Warning){    ModelicaFormatError(\"The call of fmi2DoStep(%f, %f) failed in FMU\\r\\nNote: setting fmi_loggingOn in the FMU component may produce more information from the FMU.\",currentTime, stepSize);  }  return 1.0;
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiDoStep;

    function fmiReset
      input fmiModel fmi;
      output Boolean resetOK;
      external"C" resetOK = H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiReset2(fmi)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_Reset_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_Reset_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
double H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiReset2(void*m) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiReset(a->m);
    a->currentMode=dyfmi2InstantiationMode;
    a->cpDer = 1;
    a->cpOut = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiReset failed\");
    return 1.0;
  }
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiReset;

    function fmiGetRealScalar
      input fmiModel fmi;
      input Integer ref;
      output Real val;
    algorithm
        val := scalar(fmiGetReal(fmi, {ref}));
    end fmiGetRealScalar;

    function fmiGetReal
      input fmiModel fmi;
      input Integer refs[:];
      output Real vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetReal2(
        fmi,
        refs,
        size(refs, 1),
        vals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetReal_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetReal_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetReal2(void*m, const int*refs, size_t nrefs, double*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetReal(a->m, refs, nrefs, vals);
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetReal failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetReal;

    function fmiGetRealwf
      input fmiModel fmi;
      input Integer refs[:];
      input Real preAvailable;
      output Real vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetReal2(
        fmi,
        refs,
        size(refs, 1),
        vals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetReal_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetReal_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetReal2(void*m, const int*refs, size_t nrefs, double*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetReal(a->m, refs, nrefs, vals);
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetReal failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetRealwf;

    function fmiSetReal
      input fmiModel fmi;
      input Integer refs[:];
      input Real vals[size(refs, 1)];
      external"C"
                 H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetReal2(
        fmi,
        refs,
        size(refs, 1),
        vals)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetReal_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetReal_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetReal2(void*m, const int*refs, size_t nrefs, const double*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if(!nrefs){return;}
  if (a) {
    status=a->dyFmiSetReal(a->m, refs, nrefs, vals);
    a->cpDer = 1;
    a->cpOut = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetReal failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetReal;

    function fmiSetRealwf
      input fmiModel fmi;
      input Integer refs[:];
      input Real vals[size(refs, 1)];
      input Real preAvailable;
      output Real postAvailable=preAvailable;
      external"C"
                 H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetReal2(
        fmi,
        refs,
        size(refs, 1),
        vals)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetReal_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetReal_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetReal2(void*m, const int*refs, size_t nrefs, const double*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if(!nrefs){return;}
  if (a) {
    status=a->dyFmiSetReal(a->m, refs, nrefs, vals);
    a->cpDer = 1;
    a->cpOut = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetReal failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetRealwf;

function fmiSetRealDiscrete
      input fmiModel fmi;
      input Integer refs[:];
      input Real vals[size(refs, 1)];
    protected
      Real oldVals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetRealDiscrete(
        fmi,
        refs,
        size(refs, 1),
        vals,
        oldVals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetRealDiscrete_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetRealDiscrete_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetRealDiscrete(void*m, const int*refs, size_t nrefs, double*vals, double*oldVals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  size_t i = 0;
  if(!nrefs){return;}
  if (a) {
    if(!a->discreteInputChanged){
      status=a->dyFmiGetReal(a->m, refs, nrefs, oldVals);
      if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetInteger failed in SetInteger\");
      for( i = 0; i < nrefs; ++i){
        if(oldVals[i] != vals[i]){
          a->discreteInputChanged = 1;
          break;
        }
      }
    }
    if(a->discreteInputChanged){
      if(a->currentMode == dyfmi2ContinuousTimeMode){
        status = a->dyFmiEnterEventMode(a->m);
        if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiEnterEventModeFailed\");
        a->currentMode = dyfmi2EventMode;
      }
      status=a->dyFmiSetReal(a->m, refs, nrefs, vals);
      a->cpDer = 1;
      a->cpOut = 1;
    }
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetInteger failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
  annotation(__Dymola_doNotLinkSharedObject=true,__Dymola_CriticalRegion = "H525b873079cf7a65f464c408f25344d5bd630cab", __Dymola_LockExternalObject=true,__Dymola_IdemPotent=true, __Dymola_VectorizedExceptFirst=true);
end fmiSetRealDiscrete;

    function fmiGetIntegerScalar
      input fmiModel fmi;
      input Integer ref;
      output Integer val;
    algorithm
        val := scalar(fmiGetInteger(fmi, {ref}));
    end fmiGetIntegerScalar;

    function fmiGetInteger
      input fmiModel fmi;
      input Integer refs[:];
      output Integer vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetInteger2(
        fmi,
        refs,
        size(refs, 1),
        vals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetInteger_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetInteger_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetInteger2(void*m, const int*refs, size_t nrefs, int*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetInteger(a->m, refs, nrefs, vals);
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetInteger failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetInteger;

    function fmiGetIntegerwf
      input fmiModel fmi;
      input Integer refs[:];
      input Integer preAvailable;
      output Integer vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetInteger2(
        fmi,
        refs,
        size(refs, 1),
        vals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetInteger_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetInteger_C 1
#include \"FMI/fmi2Import.h\"
#include <stdlib.h>
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetInteger2(void*m, const int*refs, size_t nrefs, int*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetInteger(a->m, refs, nrefs, vals);
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetInteger failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetIntegerwf;

    function fmiSetInteger
      input fmiModel fmi;
      input Integer refs[:];
      input Integer vals[size(refs, 1)];
    protected
      Integer oldVals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetInteger2(
        fmi,
        refs,
        size(refs, 1),
        vals,
        oldVals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetInteger_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetInteger_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetInteger2(void*m, const int*refs, size_t nrefs, int*vals, int*oldVals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  size_t i = 0;
  if(!nrefs){return;}
  if (a) {
    if(!a->discreteInputChanged){
      status=a->dyFmiGetInteger(a->m, refs, nrefs, oldVals);
      if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetInteger failed in SetInteger\");
      for( i = 0; i < nrefs; ++i){
        if(oldVals[i] != vals[i]){
          a->discreteInputChanged = 1;
          break;
        }
      }
    }
    if(a->discreteInputChanged){
      if(a->currentMode == dyfmi2ContinuousTimeMode){
        status = a->dyFmiEnterEventMode(a->m);
        if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiEnterEventModeFailed\");
        a->currentMode = dyfmi2EventMode;
      }
      status=a->dyFmiSetInteger(a->m, refs, nrefs, vals);
      a->cpDer = 1;
      a->cpOut = 1;
    }
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetInteger failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetInteger;

    function fmiSetIntegerwf
      input fmiModel fmi;
      input Integer refs[:];
      input Integer vals[size(refs, 1)];
      input Integer preAvailable;
      output Integer postAvailable=preAvailable;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetInteger2wf(
        fmi,
        refs,
        size(refs, 1),
        vals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetIntegerwf_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetIntegerwf_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetInteger2wf(void*m, const int*refs, size_t nrefs, int*vals) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  size_t i = 0;
  if(!nrefs){return;}
  if (a) {
    status=a->dyFmiSetInteger(a->m, refs, nrefs, vals);
      a->cpDer = 1;
      a->cpOut = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetInteger failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetIntegerwf;

    function fmiGetBooleanScalar
      input fmiModel fmi;
      input Integer ref;
      output Boolean val;
    algorithm
        val := scalar(fmiGetBoolean(fmi, {ref}));
    end fmiGetBooleanScalar;

    function fmiGetBoolean
      input fmiModel fmi;
      input Integer refs[:];
      output Boolean vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetBoolean2(
        fmi,
        refs,
        size(refs, 1),
        vals)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetBoolean_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetBoolean_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetBoolean2(void*m, const int* refs, size_t nr, int* vals) {
  int i;
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetBoolean(a->m, refs, nr, (fmi2Boolean*)(vals));
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetBoolean failed\");
    for(i=nr-1;i>=0;i--) vals[i]=((fmi2Boolean*)(vals))[i];
  }
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetBoolean;

    function fmiGetBooleanwf
      input fmiModel fmi;
      input Integer refs[:];
      input Integer preAvailable;
      output Boolean vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetBoolean2(
        fmi,
        refs,
        size(refs, 1),
        vals)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetBoolean_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetBoolean_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiGetBoolean2(void*m, const int* refs, size_t nr, int* vals) {
  int i;
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetBoolean(a->m, refs, nr, (fmi2Boolean*)(vals));
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetBoolean failed\");
    for(i=nr-1;i>=0;i--) vals[i]=((fmi2Boolean*)(vals))[i];
  }
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetBooleanwf;

    function fmiSetBoolean
      input fmiModel fmi;
      input Integer refs[:];
      input Boolean vals[size(refs, 1)];
    protected
      Boolean dummy[size(refs, 1)];
      Boolean oldVals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetBoolean2(
        fmi,
        refs,
        size(refs, 1),
        vals,
        dummy,
        oldVals)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetBoolean_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetBoolean_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetBoolean2(void*m, const int* refs, size_t nr, const int* vals, int* dummy, int* oldVals) {
  size_t i;
  int j;
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if(!nr){return;}
  for(i=0;i<nr;++i) ((fmi2Boolean*)(dummy))[i]=vals[i];
  if (a) {
    if(!a->discreteInputChanged){
      status=a->dyFmiGetBoolean(a->m, refs, nr, (fmi2Boolean*)(oldVals));
      if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"GetBoolean failed in SetBoolean\");
      for(j=nr-1;j>=0;j--){
        oldVals[j]=((fmi2Boolean*)(oldVals))[j];
        if(oldVals[j] != dummy[j]){
          a->discreteInputChanged = 1;
          break;
        }
      }
    }
    if(a->discreteInputChanged){
      if(a->currentMode == dyfmi2ContinuousTimeMode){
        status = a->dyFmiEnterEventMode(a->m);
        if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiEnterEventModeFailed\");
        a->currentMode = dyfmi2EventMode;
      }
      status=a->dyFmiSetBoolean(a->m, refs, nr, (fmi2Boolean*)(dummy));
      a->cpDer = 1;
      a->cpOut = 1;
    }
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetBoolean failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetBoolean;

    function fmiSetString
      input fmiModel fmi;
      input Integer refs[:];
      input String vals[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetString2(
        fmi,
        refs,
        size(refs, 1),
        vals)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetString_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetString_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetString2(void*m, const int*refs, size_t nrefs,const fmi2String vals[]) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  size_t i = 0;
  if(!nrefs){return;}
  if (a) {
    if(a->currentMode == dyfmi2ContinuousTimeMode){
      status = a->dyFmiEnterEventMode(a->m);
      if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiEnterEventModeFailed\");
      a->currentMode = dyfmi2EventMode;
    }
    status=a->dyFmiSetString(a->m, refs, nrefs, vals);
    a->discreteInputChanged = fmi2True;
    a->cpDer = 1;
    a->cpOut = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetString failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetString;

    function fmiSetBooleanwf
      input fmiModel fmi;
      input Integer refs[:];
      input Boolean vals[size(refs, 1)];
      input Integer preAvailable;
      output Integer postAvailable=preAvailable;
    protected
      Boolean dummy[size(refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetBoolean2wf(
        fmi,
        refs,
        size(refs, 1),
        vals,
        dummy)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetBooleanwf_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_SetBooleanwf_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSetBoolean2wf(void*m, const int* refs, size_t nr, const int* vals, int* dummy) {
  size_t i;
  int j;
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if(!nr){return;}
  for(i=0;i<nr;++i) ((fmi2Boolean*)(dummy))[i]=vals[i];
  if (a) {
    status=a->dyFmiSetBoolean(a->m, refs, nr, (fmi2Boolean*)(dummy));
      a->cpDer = 1;
      a->cpOut = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"SetBoolean failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true,
        __Dymola_IdemPotent=true,
        __Dymola_VectorizedExceptFirst=true);
    end fmiSetBooleanwf;

    function fmiGetDirectionalDerivative
      input fmiModel fmi;
      input Integer z_refs[:];
      input Integer v_refs[:];
      input Real dv[size(v_refs, 1)];
      output Real dz[size(z_refs, 1)];
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetDirectionalDerivative2(
        fmi,
        z_refs,
        size(z_refs, 1),
        v_refs,
        size(v_refs, 1),
        dv,
        dz)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetDirectionalDerivative2_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetDirectionalDerivative2_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_GetDirectionalDerivative2(void*m, const int* zref, size_t nzr, const int* vrefs, size_t nvr, const double *dv, double *dz) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status=a->dyFmiGetDirectionalDerivative(a->m, zref, nzr, vrefs, nvr, dv, dz);
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiGetDirectionalDerivative failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiGetDirectionalDerivative;

    function GetRealVariable
      input fmiModel fmi;
      input Real Time;
      input Real realInputs[:];
      input Real realLinearDependentInputs[:];
      input Real states[:];
      input Real linearDependentStates[:];
      input Real linearOffset=0;
      input Real realDiscreteInputs[:];
      input Boolean booleanInputs[:];
      input Integer integerInputs[:];
      //input String stringInputs[:];
      input Integer realInputValueReferences[:];
      input Integer realLinearDependentInputsValueReferences[:];
      input Integer statesValueRefernces[:];
      input Integer realDiscreteInputValueReferences[:];
      input Integer booleanInputValueReferences[:];
      input Integer integerInputValueReferences[:];
      //input Integer stringInputValueReferences[:];
      input Integer outputValueReference[:];
      output Real outputVariable;
    algorithm
      //fmi_Functions.fmiSetTime(fmi, Time);
      fmiSetReal(fmi,realInputValueReferences,realInputs);
      fmiSetReal(fmi,realLinearDependentInputsValueReferences,realLinearDependentInputs);
      fmiSetRealDiscrete(fmi,realDiscreteInputValueReferences,realDiscreteInputs);
      fmiSetBoolean(fmi,booleanInputValueReferences,booleanInputs);
      fmiSetInteger(fmi,integerInputValueReferences,integerInputs);
      //SetString(fmi,stringInputValueReferences,stringInputs);
      outputVariable:=fmiGetRealScalar(fmi,outputValueReference[1]);
      annotation(derivative(noDerivative=realLinearDependentInputs,noDerivative=linearDependentStates,noDerivative=realDiscreteInputs)=derGetRealVariable, LateInline=true);
    end GetRealVariable;

    function derGetRealVariable
      input fmiModel fmi;
      input Real Time;
      input Real realInputs[:];
      input Real realLinearDependentInputs[:];
      input Real states[:];
      input Real linearDependentStates[:];
      input Real linearOffset=0;
      input Real realDiscreteInputs[:];
      input Boolean booleanInputs[:];
      input Integer integerInputs[:];
      //input String stringInputs[:];
      input Integer realInputValueReferences[:];
      input Integer realLinearDependentInputsValueReferences[:];
      input Integer statesValueRefernces[:];
      input Integer realDiscreteInputValueReferences[:];
      input Integer booleanInputValueReferences[:];
      input Integer integerInputValueReferences[:];
      //input Integer stringInputValueReferences[:];
      input Integer outputValueReference[:];
      input Real derRealInputs[:];
      input Real derStates[:];
      input Real derLinearOffsets;
      output Real derOutputVariable;
    protected
      Real dummy[1];
    algorithm
      //fmi_Functions.fmiSetTime(fmi, Time);
      fmiSetReal(fmi,realInputValueReferences,realInputs);
      fmiSetReal(fmi,realLinearDependentInputsValueReferences,realLinearDependentInputs);
      fmiSetRealDiscrete(fmi,realDiscreteInputValueReferences,realDiscreteInputs);
      fmiSetBoolean(fmi,booleanInputValueReferences,booleanInputs);
      fmiSetInteger(fmi,integerInputValueReferences,integerInputs);
      //setString(fmi,stringInputValueReferences,stringInputs);
      dummy:=fmiGetDirectionalDerivative(fmi, outputValueReference,  cat(1,realInputValueReferences,statesValueRefernces), cat(1,derRealInputs,derStates));
      derOutputVariable:=dummy[1]+derLinearOffsets;
      annotation(LateInline=true);
    end derGetRealVariable;

    function derGetRealVariable2
      input fmiModel fmi;
      input Real Time;
      input Real realInputs[:];
      input Real realLinearDependentInputs[:];
      input Real states[:];
      input Real linearDependentStates[:];
      input Real linearOffset=0;
      input Real realDiscreteInputs[:];
      input Boolean booleanInputs[:];
      input Integer integerInputs[:];
      //input String stringInputs[:];
      input Integer realInputValueReferences[:];
      input Integer realLinearDependentInputsValueReferences[:];
      input Integer statesValueRefernces[:];
      input Integer realDiscreteInputValueReferences[:];
      input Integer booleanInputValueReferences[:];
      input Integer integerInputValueReferences[:];
      //input Integer stringInputValueReferences[:];
      input Integer outputValueReference[:];
      input Integer outputIndex;
      input Real derRealInputs[:];
      input Real derStates[:];
      input Real derLinearOffsets;
      output Real derOutputVariable;
    protected
      Real dummy[1];
    algorithm
      //fmi_Functions.fmiSetTime(fmi, Time);
      fmiSetReal(fmi,realInputValueReferences,realInputs);
      fmiSetReal(fmi,realLinearDependentInputsValueReferences,realLinearDependentInputs);
      fmiSetRealDiscrete(fmi,realDiscreteInputValueReferences,realDiscreteInputs);
      fmiSetBoolean(fmi,booleanInputValueReferences,booleanInputs);
      fmiSetInteger(fmi,integerInputValueReferences,integerInputs);
      //setString(fmi,stringInputValueReferences,stringInputs);
      dummy:=fmiGetDirectionalDerivative(fmi, outputValueReference,  cat(1,realInputValueReferences,statesValueRefernces), cat(1,derRealInputs,derStates));
      derOutputVariable:=dummy[1]+derLinearOffsets;
      annotation(LateInline=true);
    end derGetRealVariable2;

    function linearizeFMU
      input fmiModel fmi;
      input Integer xVr[:];
      input Integer dxVr[:];
      input Integer uVr[:];
      input Integer yVr[:];
      output Real A[size(dxVr, 1), size(xVr, 1)];
      output Real B[size(dxVr, 1), size(uVr, 1)];
      output Real C[size(yVr, 1), size(xVr, 1)];
      output Real D[size(yVr, 1), size(uVr, 1)];
    protected
      parameter Integer nD = size(dxVr, 1);
      parameter Integer nY = size(yVr, 1);
      parameter Integer nU = size(uVr, 1);
      parameter Integer nX = size(xVr, 1);
      parameter Integer zRef[nD + nY] = cat(1, dxVr, yVr);
      Real vec[nD + nY];
      parameter Real one[1] = { 1.0};
    algorithm
      for i in 1:nX loop
        vec := fmiGetDirectionalDerivative(
          fmi,zRef,{ xVr[i]}, one);
        A[:, i] := vec[1:nD];
        C[:, i] := vec[nD + 1:end];
      end for;
      for i in 1:nU loop
        vec := fmiGetDirectionalDerivative(
        fmi,zRef,{ uVr[i]}, one);
        B[:, i] := vec[1:nD];
        D[:, i] := vec[nD + 1:end];
      end for;
    end linearizeFMU;

    function fmiSaveFMUState
      input fmiModel fmi;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSaveFMUState2(fmi)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSaveFMUState_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSaveFMUState_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSaveFMUState2(void*m) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status = a->dyFmiGetFMUstate(a->m, &a->dyFMUstate);
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiGetFMUstate failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiSaveFMUState;

    function fmiRestoreFMUState
      input fmiModel fmi;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiRestoreFMUState2(fmi)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiRestoreFMUState_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiRestoreFMUState_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiRestoreFMUState2(void*m) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status = a->dyFmiSetFMUstate(a->m, a->dyFMUstate);
    a->cpOut = 1;
    a->cpDer = 1;
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiSetFMUstate failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiRestoreFMUState;

    function fmiSerializeFMUstate
      input fmiModel fmi;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSerializeFMUstate2(fmi)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSerializeFMUstate_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSerializeFMUstate_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiSerializeFMUstate2(void*m) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    status = a->dyFmiGetFMUstate(a->m, &a->dyFMUstate);
    if (status != fmi2OK && status != fmi2Warning) ModelicaError(\"fmiGetFMUstate failed\");
    status = a->dyFmiSerializedFMUstateSize(a->m, a->dyFMUstate, &a->dyFMUStateSize);
    if (status != fmi2OK && status != fmi2Warning) ModelicaError(\"fmiSerializedFMUstateSize failed\");
    if( a->dySerializeFMUstate) free(a->dySerializeFMUstate); a->dySerializeFMUstate = NULL;
    a->dySerializeFMUstate = malloc(a->dyFMUStateSize);
    if(!a->dySerializeFMUstate)  ModelicaError(\"malloc call to allocate SerializeFMUstate failed\");
    status = a->dyFmiSerializeFMUstate(a->m, a->dyFMUstate, a->dySerializeFMUstate, a->dyFMUStateSize);
    if (status != fmi2OK && status != fmi2Warning) ModelicaError(\"fmiSerializeFMUstate failed\");
  }
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiSerializeFMUstate;

    function fmiDeSerializeFMUstate
      input fmiModel fmi;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiDeSerializeFMUstate2(fmi)
        annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiDeSerializeFMUstate_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiDeSerializeFMUstate_C 1
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiDeSerializeFMUstate2(void*m) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    if(!a->dySerializeFMUstate) ModelicaError(\"serializedFmuState is not allocated!!!\");
    if(a->dyFMUstate){
      a->dyFmiFreeFMUstate(a->m, &a->dyFMUstate);
      a->dyFMUstate = NULL;    }
    status = a->dyFmiDeSerializeFMUstate(a->m, a->dySerializeFMUstate, a->dyFMUStateSize, &a->dyFMUstate);
    if (status != fmi2OK && status != fmi2Warning) ModelicaError(\"fmiDeSerializeFMUstate failed\");
    status = a->dyFmiSetFMUstate(a->m, a->dyFMUstate);
    if (status != fmi2OK && status != fmi2Warning) ModelicaError(\"fmiSetFMUstate failed\");
  }
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiDeSerializeFMUstate;

    function fmiEnterSlaveInitializationMode
      input fmiModel fmi;
      input Boolean setTolerance;
      input Real relativeTolerance;
      input Real tStart;
      input Boolean forceShutDownAtTStop;
      input Real tStop;
      input Real preAvailable;
      output Real postAvailable = preAvailable;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiEnterSlaveInitializationMode2(fmi, setTolerance, relativeTolerance, tStart, forceShutDownAtTStop, tStop)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiEnterSlaveInitializationMode_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiEnterSlaveInitializationMode_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiEnterSlaveInitializationMode2(void*m, int setTolerance, double relativeTolerance, double tStart, int forceShutDownAtTStop, double tStop) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    if(a->currentMode==dyfmi2InstantiationMode){
      status=a->dyFmiSetupExperiment(a->m, setTolerance, relativeTolerance, tStart, forceShutDownAtTStop, tStop);
      status=a->dyFmiEnterInitializationMode(a->m);
      a->dyTriggered=0;
      a->dyLastTime=a->dyTime;
      a->currentMode=dyfmi2InitializationMode;
    }else{
      status=fmi2OK;
    }
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"InitializeSlave failed\");
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiEnterSlaveInitializationMode;

    function fmiExitSlaveInitializationMode
      input fmiModel fmi;
      input Real preAvailable;
      output Real postAvailable = preAvailable;
      external"C" H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiExitSlaveInitializationMode2(fmi)
      annotation (Include="
#ifndef H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiExitSlaveInitializationMode_C
#define H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiExitSlaveInitializationMode_C 1
#include <stdlib.h>
#include \"FMI/fmi2Import.h\"
void H525b873079cf7a65f464c408f25344d5bd630cab3240822845386548464191_fmiExitSlaveInitializationMode2(void*m) {
  struct dy_fmi2Extended*a=m;
  fmi2Status status=fmi2Fatal;
  if (a) {
    if(a->currentMode==dyfmi2InitializationMode){
      status=a->dyFmiExitInitializationMode(a->m);
      a->dyTriggered=0;
      a->dyLastTime=a->dyTime;
      a->currentMode = dyfmi2EventMode;
    }else{status = fmi2OK;}
  }
  if (status!=fmi2OK && status!=fmi2Warning) ModelicaError(\"fmiExitModelInitialization failed!\");
  return;
}
#endif", Library="H525b873079cf7a65f464c408f25344d5bd630cab", LibraryDirectory="modelica://H525b873079cf7a65f464c408f25344d5bd630cab/Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab/binaries");
      annotation (
        __Dymola_doNotLinkSharedObject=true,
        __Dymola_CriticalRegion="H525b873079cf7a65f464c408f25344d5bd630cab",
        __Dymola_LockExternalObject=true);
    end fmiExitSlaveInitializationMode;

end fmi_Functions;

initial equation
equation
  when initial() then
    fmi = fmi_Functions.fmiModel(fmi_instanceName, fmi_loggingOn, fmi_resourceLocation);
  end when;
initial algorithm
  fmi_Functions.fmiSetReal(fmi, {16777217, 16777218, 16777219, 16777220, 16777221, 16777222, 16777223, 16777224, 16777225}, {Kw, T1, T2, T3, T4, Tw, vSI_start, vsmax, vsmin});
    fmi_Functions.fmiEnterSlaveInitializationMode(fmi, fmi_setTol, fmi_rTol, fmi_StartTime, fmi_forceShutDownAtStopTime, fmi_StopTime, 1);
  fmi_rdum := 1;
  fmi_idum := 1;
  myTimeStart :=time;
    fmi_Functions.fmiSetReal(fmi, {620756992}, {_vSI_start});
algorithm
assert(fmi_CommunicationStepSize > 0.0,"The parameter fmi_CommunicationStepSize has an invalid value, please set a positive value larger than 0.0");
  when {initial(), sample(fmi_StartTime, fmi_CommunicationStepSize)} then
    if fmi_InputTime then
      fmi_Functions.fmiSetReal(fmi,{620756992}, {_vSI_old});
    else
      if fmi_UsePreOnInputSignals then
        fmi_Functions.fmiSetReal(fmi, {620756992}, {pre(vSI)});
      else
        fmi_Functions.fmiSetReal(fmi, {620756992}, {vSI});
      end if;
    end if;
      if fmi_rdum > 0  and fmi_idum > 0 and not fmi_exitInit and not initial() then
        fmi_Functions.fmiExitSlaveInitializationMode(fmi, 1);
        fmi_exitInit:=true;
      end if;
    if time>=fmi_CommunicationStepSize +fmi_StartTime then
      for stepSizeIndex in 1:stepSizeScaleFactor loop
        fmi_StepOK :=fmi_Functions.fmiDoStep(
          fmi,
          time + (stepSizeIndex - 1 - stepSizeScaleFactor)*
            fmi_CommunicationStepSize/stepSizeScaleFactor,
          fmi_CommunicationStepSize/stepSizeScaleFactor,
          1);
      end for;
      fmi_flip :=not pre(fmi_flip);
    end if;
    if not initial() then
  internal.__recalibrated :=fmi_Functions.fmiGetBooleanScalar(fmi, 603979776);
  internal.__error_signals_Recalibrate :=fmi_Functions.fmiGetIntegerScalar(fmi,
        603979777);
  internal.__error_signals_Reinitialize :=fmi_Functions.fmiGetIntegerScalar(fmi,
        603979778);
  internal.__error_signals_DoStep :=fmi_Functions.fmiGetIntegerScalar(fmi,
        603979779);
  internal.vs :=fmi_Functions.fmiGetRealScalar(fmi, 603979780);
    end if;
  end when;
  when {pre(fmi_flip), not pre(fmi_flip)} then
    _vSI_old := pre(vSI);
  end when;
equation
  if initial() then
    __recalibrated =  fmi_Functions.fmiGetBooleanScalar(fmi, 603979776);
  else
    __recalibrated = internal.__recalibrated;
  end if;
  if initial() then
    __error_signals_Recalibrate =  fmi_Functions.fmiGetIntegerScalar(fmi, 603979777);
  else
    __error_signals_Recalibrate = internal.__error_signals_Recalibrate;
  end if;
  if initial() then
    __error_signals_Reinitialize =  fmi_Functions.fmiGetIntegerScalar(fmi, 603979778);
  else
    __error_signals_Reinitialize = internal.__error_signals_Reinitialize;
  end if;
  if initial() then
    __error_signals_DoStep =  fmi_Functions.fmiGetIntegerScalar(fmi, 603979779);
  else
    __error_signals_DoStep = internal.__error_signals_DoStep;
  end if;
  if initial() then
    vs = fmi_Functions.GetRealVariable(fmi,myTimeStart, fill(0.0,0), fill(0.0,0), fill(0.0,0), fill(0.0,0), zeroOffset, fill(0.0,0), fill(false,0), fill(0,0), fill(0,0), fill(0,0), fill(0,0), fill(0,0), fill(0,0), fill(0,0), {603979780});
  else
    vs = internal.vs;
  end if;
  annotation (__Dymola_FMUImportVersion="Dymola 2025x Refresh 1", __Dymola_FMUImportPath="C:/Users/vanfr/Documents/Dymola/efmuPSS/SiL-integration/FMU/H525b873079cf7a65f464c408f25344d5bd630cab.fmu", __Dymola_FMUImportIncludeAllVariables="false", __Dymola_FMUImportIntegrate="false", __Dymola_FMUResourcePath="Resources/Library/FMU/H525b873079cf7a65f464c408f25344d5bd630cab",__Dymola_FMUImportDateTime="Mon Oct 27 17:06:32 2025 GMT", experiment(StartTime=0.0, StopTime=10.0, Tolerance=1E-06),
    Icon(graphics={
      Text(extent={{-150,150},{150,110}},
        textColor={0,0,255},
        textString="%name"),
      Text(extent={{-150,-110},{150,-150}},
        textColor={95,95,95},
        textString="FMI 2.0 CS")}),
    Diagram(graphics={
      Text(extent={{-150,150},{150,110}},
        textColor={0,0,255},
        textString="%name"),
      Text(extent={{-150,-110},{150,-150}},
        textColor={95,95,95},
        textString="FMI 2.0 CS")}),
Documentation(info="<html>
<h4>ModelDescription Attributes</h4>
<ul>
<li>fmiVersion = 2.0</li>
<li>modelName = H525b873079cf7a65f464c408f25344d5bd630cab</li>
<li>generationTool = Dymola Version 2025x Refresh 1, 2025-04-11 (using Inline integration method Explicit Euler and internal fixed step size 0.001)</li>
<li>generationDateAndTime = 2025-10-27T17:06:20Z</li>
</ul>
<p><br><b>Co-Simulation Attributes</b></p>
<ul>
<li>needsExecutionTool = false</li>
<li>canHandleVariableCommunicationStepSize = true</li>
<li>canInterpolateInputs = false</li>
<li>maxOutputDerivativeOrder = 0</li>
<li>canRunAsynchronuously = false</li>
<li>canBeInstantiatedOnlyOncePerProcess = false</li>
<li>canNotUseMemoryManagementFunctions = true</li>
<li>canGetAndSetFMUstate = true</li>
<li>canSerializeFMUstate = true</li>
<li>providesDirectionalDerivative = true</li>
</ul>
</html>"));
end H525b873079cf7a65f464c408f25344d5bd630cab;
