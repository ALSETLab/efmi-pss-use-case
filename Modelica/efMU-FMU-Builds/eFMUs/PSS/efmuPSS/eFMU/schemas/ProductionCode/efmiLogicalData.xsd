<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:include schemaLocation="../efmiAnnotation.xsd"/>
	<xs:include schemaLocation="../efmiIdentifierType.xsd"/>
	<xs:include schemaLocation="../efmiManifestReferences.xsd"/>
	<xs:element name="LogicalData">
		<!--  Logical data contains the (cross container) mapping to the Algorithm Code manifest. -->
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DataReferences" minOccurs="1" maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Annotations" type="efmiAnnotation" minOccurs="0" maxOccurs="1"/>
							<xs:element name="DataReference" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:annotation>
										<xs:documentation>If componentIdentifier is set, it refers to a component within a struct type representing the certain variable and the varRefId refers to the variable representing the struct's root.</xs:documentation>
									</xs:annotation>
									<xs:sequence>
										<xs:element name="ForeignVariableReference" type="ForeignReference" minOccurs="1" maxOccurs="1"/>
										<xs:choice>
											<xs:element name="GlobalVariable" minOccurs="1" maxOccurs="1">
												<xs:complexType>
													<xs:attribute name="variableRefId" type="efmiIdentifierType" use="required"/>
													<xs:attribute name="componentIdentifier" type="xs:string" use="optional"/>
													<!--  This componentIdentifier is the path within the variable (e.g. in case the variable is of an aggregate type -->
												</xs:complexType>
											</xs:element>
											<xs:element name="FormalParameter" minOccurs="1" maxOccurs="1">
												<xs:complexType>
													<xs:attribute name="formalParameterRefId" type="efmiIdentifierType" use="required"/>
													<xs:attribute name="componentIdentifier" type="xs:string" use="optional"/>
													<!--  This componentIdentifier is the path within the variable (e.g. in case the variable is of an aggregate type -->
												</xs:complexType>
											</xs:element>
										</xs:choice>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="FunctionReferences" minOccurs="1" maxOccurs="1">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Annotations" type="efmiAnnotation" minOccurs="0" maxOccurs="1"/>
							<xs:element name="FunctionReference" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="ForeignFunctionReference" type="ForeignReference" minOccurs="1" maxOccurs="1"/>
										<xs:element name="GlobalFunction" minOccurs="1" maxOccurs="1">
											<xs:complexType>
												<xs:attribute name="functionRefId" type="efmiIdentifierType" use="required"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="FunctionKind">
		<xs:restriction base="xs:normalizedString">
			<xs:enumeration value="doStep"/>
			<xs:enumeration value="Initialization"/>
			<xs:enumeration value="Terminate"/>
			<xs:enumeration value="Restart"/>
			<xs:enumeration value="Auxiliary"/>
			<xs:enumeration value="Extern"/>
			<xs:enumeration value="Service"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="VariableKind">
		<xs:restriction base="xs:normalizedString">
			<!-- More kinds of variables may be added, e.g. derivative, due to current discussion. -->
			<xs:enumeration value="Input"/>
			<xs:enumeration value="Output"/>
			<xs:enumeration value="Parameter"/>
			<xs:enumeration value="State"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
