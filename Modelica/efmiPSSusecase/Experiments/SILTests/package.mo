within efmiPSSusecase.Experiments;
package SILTests "Test scenarios of original experiment
     [efmiPSSusecase.Experiments.Example_3_PSSDesign4PSSVariant]
   for eBlock model
     [efmiPSSusecase.Components.PSSTypeIImod4efmi]."

  extends .DymolaEmbedded.Icons.eFMI_ExperimentPackage;

  constant ToleranceConfigurations tolerances_default(
    absolute_x32(vs=1.0e-3),
    relative_x32(vs=1.0e-4),
    absolute_x64(vs=1.0e-6),
    relative_x64(vs=1.0e-8))
                          "Configuration of default tolerances." annotation (
      HideResult=true, Placement(transformation(extent={{-80,40},{-40,80}})));

  constant ToleranceConfigurations tolerances_Scenario_1(
    absolute_x32(vs=tolerances_default.absolute_x32.vs),
    relative_x32(vs=tolerances_default.relative_x32.vs),
    absolute_x64(vs=tolerances_default.absolute_x64.vs),
    relative_x64(vs=tolerances_default.relative_x64.vs))
    "Configuration of tolerances for Scenario 1." annotation (HideResult=true,
      Placement(transformation(extent={{-80,-40},{-40,0}})));

  /*
    Use help variable set by 'build()' to find the
    Behavioral Model container:
  */
  constant String bmodel_container_directory=
      "C:/Users/CBR5.DSONE/Documents/Dymola/PSSefmu/eFMU/BModel_Dymola_d25b61af2505a38fdeb5f5837722c454f960701f"
    annotation (Protection(hideFromBrowser=true));

  annotation (
    preferredView="diagram",
    Diagram(coordinateSystem(extent={{-100,-60},{100,100}}), graphics={
        Rectangle(
          extent={{-90,90},{90,30}},
          lineColor={0,140,72},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid),
        Text(
          extent={{-40,80},{80,40}},
          textColor={0,140,72},
          textStyle={TextStyle.Bold},
          textString="default"),
        Rectangle(
          extent={{-90,-50},{90,10}},
          lineColor={0,140,72},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid),
        Text(
          extent={{-40,-40},{80,0}},
          textColor={0,140,72},
          textStyle={TextStyle.Bold},
          textString="Scenario 1:\nG1.pss")}),
    Documentation(info="
        <html>
        <p>
        eFMU experiment package bundling test scenarios extracted from
        <a href=\"modelica://efmiPSSusecase.Experiments.Example_3_PSSDesign4PSSVariant\">efmiPSSusecase.Experiments.Example_3_PSSDesign4PSSVariant</a>
        (original experiment), with each component of type
        <a href=\"modelica://efmiPSSusecase.Components.PSSTypeIImod4efmi\">efmiPSSusecase.Components.PSSTypeIImod4efmi</a>
        (eBlock) defining one test scenario according to eFMU generation
        configuration
        <a href=\"modelica://efmiPSSusecase.eBlockDymolaEmbedded\">efmiPSSusecase.eBlockDymolaEmbedded</a>.
        </p>
        <p>
        The contained test scenarios are used as basis for a Dymola-administered
        eFMI Behavioral Model container within the backing eFMU.
        </p>
        <p>
        Generated by Dymola on 2025-10-09T13:28:05Z.
        </p>
        <h4>Required manual configurations</h4>
        <p>
        <b>Define time contexts of reference experiment:</b> The generated
        reference experiment (<code>Test_ReferenceExperiment</code>) assumes by
        default, that the eBlocks of the original experiment
        (<code>experiment</code> component) are already part of a correctely
        timed periodic clock partition. If some are continuous time instead, the
        <code>clkSet</code><i>X</i> component of the respective scenario must be
        changed from <code>Inferred</code> to <code>External</code>. Otherwise,
        simulations of the reference experiment will fail with clock
        partitioning translation errors. Note, that switching to
        <code>External</code> does not require to manually add and connect a
        clock; the periodic clock already shown in the diagram layer will be
        connected with the sampling period as defined in the eFMU generation
        configuration used to generate the eFMU experiment package.
        </p>
        <p>
        <b>Incorporate tuneable parameter modifications of eBlocks:</b> A
        limitation of eFMU experiment packages is, that modifications of tuneable
        parameters as defined in the original experiment are not incorporated
        into the generated software-in-the-loop (SiL) tests
        (<code>Test_SiL_Scenario_</code><i>*</i>). Please add such to the
        respective eBlocks as need be (i.e., whenever the respective eBlock of
        the original experiment has a modification of any of its tuneable
        parameters to any non-default value, add the very same modification to
        the eBlock of the SiL test).
        </p>
        <h4>Optional manual configurations</h4>
        <p>
        <b>Define tolerances:</b>
        Absolute and relative tolerances can be set to global defaults used by
        all test scenarios, or test scenario specific with specific settings
        overwriting the defaults for the respective scenario. All settings can
        be done in the graphical layer of the root package; just double click
        the respective tolerances setup icon to open dedicated editing dialogs.
        </p>
        <p>
        <b>Define test scenario descriptions:</b>
        The documentation strings of the <code>Test_SiL_Scenario_</code><i>X</i>
        models define the test scenario descriptions of the manifest
        of the generated eFMI Behavioral Model container.  
        </p>
        <h4>eFMI Behavioral Model container generation</h4>
        <p>
        After setting up time contexts, modifications, tolerances and test
        scenario descriptions as need be, a respective eFMI Behavioral Model
        container can be generated in the backing eFMU by just calling the
        <code>build()</code> function. Doing so will start a simulation of the
        <code>Test_ReferenceExperiment</code> model to generate the reference
        trajectories, and afterwards generate the container manifest.
        </p>
        <h4>Original experiment limitations</h4>
        <p>
        <b><code>min</code>/<code>max</code> annotations and automatic
        saturation:</b> The <code>min</code> and <code>max</code> annotations on
        parameters and variables of eBlocks have dedicated semantic means for
        eFMI GALEC code generated for such; in GALEC, each such entity is
        subject to automatic saturation. Such saturation semantic does not exist
        in Modelica for <code>min</code> and <code>max</code> annotations. As a
        consequence, whenever an original experiment runs into range violations
        for eBlock entities, its simulation will compute with out-of-range
        values, which in turn influence further simulation. If such out-of-range
        values would be saturated instead, the reference results very likely
        would be different. The eBlocks of the SiL experiments will
        however saturate such values and therefore likely cause the test
        to fail when compared to the original experiment based reference
        results.
        </p>
        <h4>Editing restrictions</h4>
        <p>
        <b>Warning:</b> Do <u><i>not</i></u> edit this package or its
        subclasses, except changes on…
        </p>
        <ul>
          <li>…descriptions and documentation</li>
          <li>…the clock setup (<code>clkSet</code><i>X</i>) of reference
          experiment, to switch between <code>Inferred</code> and
          <code>External</code> mode (respectively
          required whether recorded signals are already sampled or not)</li>
          <li>…tolerances (new default or test specific values)</li>
          <li>…experiment annotations of the reference experiment like start
          time, stop time, solver, fixed stepsize, output precision etc
          (start and stop time of SiL tests <i>must</i> be respectively
          adjusted)</li>
          <li>…<code>__assert_error_signals</code> of the eBlocks of SiL tests
          to change whether returned error signals of tested production code
          are asserted -- i.e., abort simulation -- or not
          <li>…eBlock parameter modifications (reference experiment and SiL
          tests <i>must</i> be kept in sync whenever parameters are
          modified)</li>
          <li>…delete SiL tests (but <i>not</i> move or rename)</li>
          <li>…rename the package or move it to become a subpacke of another library</li>
        </ul>
        <p>
        Other edits can cause the eFMU Behavioral Model generation or SiL
        tests to fail.
        </p>
        </html>"));
end SILTests;
